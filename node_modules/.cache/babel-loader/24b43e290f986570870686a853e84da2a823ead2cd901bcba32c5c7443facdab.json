{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\React\\\\task-manager\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const tasks = [{\n    name: \"Complete React project\"\n  }, {\n    name: \"Prepare for interview\"\n  }, {\n    name: \"Read React docs\"\n  }];\n  const [selectedTask, setSelectedTask] = useState(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"root\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: selectedTask === index ? \"task-expanded\" : \"\",\n        onClick: () => setSelectedTask(selectedTask === index ? null : index),\n        children: task.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"QDCgpSdX95/c2n76PQGpsinHLnc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","tasks","name","selectedTask","setSelectedTask","id","children","fileName","_jsxFileName","lineNumber","columnNumber","map","task","index","className","onClick","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/React/task-manager/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction App() {\n  const tasks = [\n    { name: \"Complete React project\" },\n    { name: \"Prepare for interview\" },\n    { name: \"Read React docs\" },\n  ];\n\n  const [selectedTask, setSelectedTask] = useState(null);\n\n  return (\n    <div id=\"root\">\n      <h1>Task Manager</h1>\n      <ul>\n        {tasks.map((task, index) => (\n          <li\n            key={index}\n            className={selectedTask === index ? \"task-expanded\" : \"\"}\n            onClick={() =>\n              setSelectedTask(selectedTask === index ? null : index)\n            }\n          >\n            {task.name}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,KAAK,GAAG,CACZ;IAAEC,IAAI,EAAE;EAAyB,CAAC,EAClC;IAAEA,IAAI,EAAE;EAAwB,CAAC,EACjC;IAAEA,IAAI,EAAE;EAAkB,CAAC,CAC5B;EAED,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEtD,oBACEE,OAAA;IAAKO,EAAE,EAAC,MAAM;IAAAC,QAAA,gBACZR,OAAA;MAAAQ,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBZ,OAAA;MAAAQ,QAAA,EACGL,KAAK,CAACU,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrBf,OAAA;QAEEgB,SAAS,EAAEX,YAAY,KAAKU,KAAK,GAAG,eAAe,GAAG,EAAG;QACzDE,OAAO,EAAEA,CAAA,KACPX,eAAe,CAACD,YAAY,KAAKU,KAAK,GAAG,IAAI,GAAGA,KAAK,CACtD;QAAAP,QAAA,EAEAM,IAAI,CAACV;MAAI,GANLW,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOR,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACV,EAAA,CA3BQD,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AA6BZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}